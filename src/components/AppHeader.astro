---
import { Image } from "astro:assets";
import Container from "./Container.astro";
import iotcraft from "../images/iotcraft.png";
const links = [
  {destination: "/start", label: "Docs",},
  {destination: "/mqtt", label: "MQTT Client",},
  {destination: "/hoverscreen", label: "Hoverscreen",},
  {destination: "/gesture", label: "Gesture",},
];
---
<header>
  <nav id="nav" class="absolute group z-10 w-full border-b border-black/5 dark:border-white/5 lg:border-transparent">
    <Container>
      <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4">
        <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-fit">
          <a href="/" aria-label="logo" class="flex items-center space-x-2">
            <Image loading="eager" src={iotcraft} alt="IoTcraft Logo" class="size-9"/>
            <span class="text-2xl font-bold text-gray-900 dark:text-white">IoTcraft</span>
          </a>
          <div class="relative flex max-h-10 items-center lg:hidden">
            <button aria-label="hamburger" id="hamburger" class="relative -mr-6 p-6 active:scale-95 duration-300">
              <div aria-hidden="true" class="m-auto h-0.5 w-5 rounded bg-gray-950 transition duration-300 dark:bg-white origin-top group-data-[state=active]:rotate-45 group-data-[state=active]:translate-y-1.5"></div>
              <div aria-hidden="true" class="m-auto mt-2 h-0.5 w-5 rounded bg-gray-950 transition duration-300 dark:bg-white origin-bottom group-data-[state=active]:-rotate-45 group-data-[state=active]:-translate-y-1"></div>
            </button>
          </div>
        </div>
        <div aria-hidden="true" class="fixed inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 bg-white/70 backdrop-blur-2xl transition duration-500 group-data-[state=active]:origin-top group-data-[state=active]:scale-y-100 dark:bg-gray-950/70 lg:hidden"></div>
        <div class="invisible absolute top-full left-0 z-20 w-full origin-top-right translate-y-1 scale-90 flex-col flex-wrap justify-end gap-6 rounded-3xl border border-gray-100 bg-white p-8 opacity-0 shadow-2xl shadow-gray-600/10 transition-all duration-300 dark:border-gray-700 dark:bg-gray-800 dark:shadow-none lg:visible lg:relative lg:flex lg:w-fit lg:translate-y-0 lg:scale-100 lg:flex-row lg:items-center lg:gap-0 lg:border-none lg:bg-transparent lg:p-0 lg:opacity-100 lg:shadow-none lg:dark:bg-transparent group-data-[state=active]:visible group-data-[state=active]:scale-100 group-data-[state=active]:opacity-100 lg:group-data-[state=active]:translate-y-0">
          <div class="w-full text-gray-600 dark:text-gray-200 lg:w-auto lg:pr-4 lg:pt-0">
            <div id="links" class="flex flex-col gap-6 tracking-wide lg:flex-row lg:gap-0 lg:text-sm">{
              links.map((link) => (
              <a href={link.destination} class="hover:text-[var(--color-main)] block transition dark:hover:text-white md:px-4">
                <span>{link.label}</span>
              </a>
              ))}
            </div>
          </div>
          <div class="mt-12 lg:mt-0">
            <a href="/start" class="relative flex h-9 w-full items-center justify-center px-4 before:absolute before:inset-0 before:rounded-full before:bg-[var(--color-main)] before:transition before:duration-300 hover:before:scale-105 active:duration-75 active:before:scale-95 sm:w-max">
              <span class="relative text-sm font-semibold text-white">Get Started</span>
            </a>
          </div>
        </div>
      </div>
    </Container>
  </nav>
</header>
<script>
let isToggled = false;
const nav = document.getElementById("nav") as HTMLElement;
const hamburger = document.getElementById("hamburger") as HTMLButtonElement;
const linkContainer = document.getElementById("links") as HTMLElement;
const links = Array.from(linkContainer.children) as HTMLAnchorElement[];
hamburger.addEventListener("click", toggle);
links.forEach((link) => {
  link.addEventListener("click", toggle);
});
function toggle() {
  isToggled = !isToggled;
  if (isToggled) {
    nav.dataset.state = "active";
  } else {
    nav.dataset.state = "";
  }
}
</script>
